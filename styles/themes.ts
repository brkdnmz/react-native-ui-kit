// https://material-foundation.github.io/material-theme-builder/

const COMMON = {
  // customRoundness: (v: number | "full") =>
  //   v === "full" ? Number.MAX_SAFE_INTEGER : 4 * v,
  roundness: {
    none: 0,
    xs: 2,
    sm: 4,
    md: 6,
    lg: 8,
    xl: 12,
    "2xl": 16,
    "3xl": 24,
    "4xl": 32,
    full: Number.MAX_SAFE_INTEGER,
  },
  // https://tailwindcss.com/docs/font-weight
  fontWeight: {
    thin: "100",
    extraLight: "200",
    light: "300",
    regular: "400",
    medium: "500",
    semiBold: "600",
    bold: "700",
    extraBold: "800",
    black: "900",
  },
};

export const THEMES = {
  light: {
    ...COMMON,
    colors: {
      primary: "rgb(115, 92, 0)",
      onPrimary: "rgb(255, 255, 255)",
      primaryContainer: "rgb(255, 224, 136)",
      onPrimaryContainer: "rgb(36, 26, 0)",
      secondary: "rgb(0, 104, 121)",
      onSecondary: "rgb(255, 255, 255)",
      secondaryContainer: "rgb(170, 237, 255)",
      onSecondaryContainer: "rgb(0, 31, 38)",
      tertiary: "rgb(70, 102, 75)",
      onTertiary: "rgb(255, 255, 255)",
      tertiaryContainer: "rgb(200, 236, 201)",
      onTertiaryContainer: "rgb(3, 33, 12)",
      error: "rgb(186, 26, 26)",
      onError: "rgb(255, 255, 255)",
      errorContainer: "rgb(255, 218, 214)",
      onErrorContainer: "rgb(65, 0, 2)",
      background: "rgb(255, 251, 255)",
      onBackground: "rgb(30, 27, 22)",
      surface: "rgb(255, 251, 255)",
      onSurface: "rgb(30, 27, 22)",
      surfaceVariant: "rgb(235, 225, 207)",
      onSurfaceVariant: "rgb(76, 70, 57)",
      outline: "rgb(125, 118, 103)",
      outlineVariant: "rgb(207, 198, 180)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(51, 48, 42)",
      inverseOnSurface: "rgb(247, 240, 231)",
      inversePrimary: "rgb(233, 195, 72)",
      elevation: {
        level0: "transparent",
        level1: "rgb(248, 243, 242)",
        level2: "rgb(244, 238, 235)",
        level3: "rgb(240, 234, 227)",
        level4: "rgb(238, 232, 224)",
        level5: "rgb(235, 229, 219)",
      },
      surfaceDisabled: "rgba(30, 27, 22, 0.12)",
      onSurfaceDisabled: "rgba(30, 27, 22, 0.38)",
      backdrop: "rgba(53, 48, 36, 0.4)",
    },
  },
  dark: {
    ...COMMON,
    colors: {
      primary: "rgb(233, 195, 72)",
      onPrimary: "rgb(60, 47, 0)",
      primaryContainer: "rgb(87, 69, 0)",
      onPrimaryContainer: "rgb(255, 224, 136)",
      secondary: "rgb(85, 214, 243)",
      onSecondary: "rgb(0, 54, 64)",
      secondaryContainer: "rgb(0, 78, 92)",
      onSecondaryContainer: "rgb(170, 237, 255)",
      tertiary: "rgb(172, 207, 174)",
      onTertiary: "rgb(25, 55, 31)",
      tertiaryContainer: "rgb(47, 78, 52)",
      onTertiaryContainer: "rgb(200, 236, 201)",
      error: "rgb(255, 180, 171)",
      onError: "rgb(105, 0, 5)",
      errorContainer: "rgb(147, 0, 10)",
      onErrorContainer: "rgb(255, 180, 171)",
      background: "rgb(30, 27, 22)",
      onBackground: "rgb(232, 226, 217)",
      surface: "rgb(30, 27, 22)",
      onSurface: "rgb(232, 226, 217)",
      surfaceVariant: "rgb(76, 70, 57)",
      onSurfaceVariant: "rgb(207, 198, 180)",
      outline: "rgb(152, 144, 128)",
      outlineVariant: "rgb(76, 70, 57)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(232, 226, 217)",
      inverseOnSurface: "rgb(51, 48, 42)",
      inversePrimary: "rgb(115, 92, 0)",
      elevation: {
        level0: "transparent",
        level1: "rgb(40, 35, 25)",
        level2: "rgb(46, 40, 26)",
        level3: "rgb(52, 46, 28)",
        level4: "rgb(54, 47, 28)",
        level5: "rgb(58, 51, 29)",
      },
      surfaceDisabled: "rgba(232, 226, 217, 0.12)",
      onSurfaceDisabled: "rgba(232, 226, 217, 0.38)",
      backdrop: "rgba(53, 48, 36, 0.4)",
    },
  },
} as const;
